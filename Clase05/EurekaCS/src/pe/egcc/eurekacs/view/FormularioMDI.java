package pe.egcc.eurekacs.view;

import java.io.InputStream;
import java.sql.Connection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JInternalFrame;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import pe.egcc.eurekacs.controller.ClienteController;
import pe.egcc.eurekacs.db.AccesoDB;
import pe.egcc.eurekacs.domain.Cliente;
import pe.egcc.eurekacs.domain.Empleado;
import pe.egcc.eurekacs.util.Dialogo;
import pe.egcc.eurekacs.util.Memoria;

/**
 *
 * @author Gustavo Coronel
 */
public class FormularioMDI extends javax.swing.JFrame {

  /**
   * Creates new form FormularioMDI
   */
  public FormularioMDI() {
    initComponents();
    establecerTitulo();
    this.setExtendedState(MAXIMIZED_BOTH);
  }

  private void establecerTitulo() {
    String titulo = "EUREKA APP";
    Empleado emp = (Empleado) Memoria.get("usuario");
    titulo += " [Usuario: " + emp.getUsuario() + "]";
    titulo += " [Esquema: aaaaa]";
    this.setTitle(titulo);
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    desktopPane = new javax.swing.JDesktopPane();
    menuBar = new javax.swing.JMenuBar();
    menuArchivo = new javax.swing.JMenu();
    menuArchivoSalir = new javax.swing.JMenuItem();
    menuProceso = new javax.swing.JMenu();
    menuTabla = new javax.swing.JMenu();
    menuTablaClientes = new javax.swing.JMenuItem();
    menuConsulta = new javax.swing.JMenu();
    menuReporte = new javax.swing.JMenu();
    menuReporteClientes = new javax.swing.JMenuItem();
    menuReporteClientes2 = new javax.swing.JMenuItem();
    menuUtil = new javax.swing.JMenu();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    menuArchivo.setText("Archivo");

    menuArchivoSalir.setText("Salir");
    menuArchivoSalir.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        menuArchivoSalirActionPerformed(evt);
      }
    });
    menuArchivo.add(menuArchivoSalir);

    menuBar.add(menuArchivo);

    menuProceso.setText("Proceso");
    menuBar.add(menuProceso);

    menuTabla.setText("Tabla");

    menuTablaClientes.setText("Clientes");
    menuTablaClientes.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        menuTablaClientesActionPerformed(evt);
      }
    });
    menuTabla.add(menuTablaClientes);

    menuBar.add(menuTabla);

    menuConsulta.setText("Consulta");
    menuBar.add(menuConsulta);

    menuReporte.setText("Reporte");

    menuReporteClientes.setText("Clientes");
    menuReporteClientes.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        menuReporteClientesActionPerformed(evt);
      }
    });
    menuReporte.add(menuReporteClientes);

    menuReporteClientes2.setText("Clientes 2");
    menuReporteClientes2.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        menuReporteClientes2ActionPerformed(evt);
      }
    });
    menuReporte.add(menuReporteClientes2);

    menuBar.add(menuReporte);

    menuUtil.setText("Util");
    menuBar.add(menuUtil);

    setJMenuBar(menuBar);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void menuArchivoSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuArchivoSalirActionPerformed
    System.exit(0);
  }//GEN-LAST:event_menuArchivoSalirActionPerformed

  private void menuTablaClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuTablaClientesActionPerformed
    cargarFormulario(MantClientesView.class);
  }//GEN-LAST:event_menuTablaClientesActionPerformed

  private void menuReporteClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuReporteClientesActionPerformed
    Connection cn = null;
    try {
      // Obteniendo el objeto Connection
      cn = AccesoDB.getConnection();
      // Parametros
      Map pars = new HashMap();
      // El reporte
      String fileRepo = "/pe/egcc/eurekacs/reports/repoClientes.jasper";
      InputStream ioRepo = Class.class.getResourceAsStream(fileRepo);
      JasperPrint jpRepo = JasperFillManager.fillReport(ioRepo, pars, cn);
      // Visualizando el Reporte
      JasperViewer viewer = new JasperViewer(jpRepo, false);
      viewer.setTitle("Mi Reporte");
      viewer.setVisible(true);
    } catch (Exception ex) {
      Dialogo.error(null, ex.getMessage());
    } finally{
      try {
        cn.close();
      } catch (Exception e) {
      }
    }
  }//GEN-LAST:event_menuReporteClientesActionPerformed

  private void menuReporteClientes2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuReporteClientes2ActionPerformed
    try {
      // Obteniendo Datos
      ClienteController control = new ClienteController();
      List<Cliente> lista = control.getClientes();
      JRBeanCollectionDataSource jrData;
      jrData = new JRBeanCollectionDataSource(lista);
      // Parametros
      Map pars = new HashMap();
      // El reporte
      String fileRepo = "/pe/egcc/eurekacs/reports/repoClientes.jasper";
      InputStream ioRepo = Class.class.getResourceAsStream(fileRepo);
      JasperPrint jpRepo;
      jpRepo = JasperFillManager.fillReport(ioRepo, pars, jrData);
      // Visualizando el Reporte
      JasperViewer viewer = new JasperViewer(jpRepo, false);
      viewer.setTitle("Mi Reporte");
      viewer.setVisible(true);
    } catch (Exception ex) {
      Dialogo.error(null, ex.getMessage());
    } 
  }//GEN-LAST:event_menuReporteClientes2ActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(FormularioMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(FormularioMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(FormularioMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(FormularioMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new FormularioMDI().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JDesktopPane desktopPane;
  private javax.swing.JMenu menuArchivo;
  private javax.swing.JMenuItem menuArchivoSalir;
  private javax.swing.JMenuBar menuBar;
  private javax.swing.JMenu menuConsulta;
  private javax.swing.JMenu menuProceso;
  private javax.swing.JMenu menuReporte;
  private javax.swing.JMenuItem menuReporteClientes;
  private javax.swing.JMenuItem menuReporteClientes2;
  private javax.swing.JMenu menuTabla;
  private javax.swing.JMenuItem menuTablaClientes;
  private javax.swing.JMenu menuUtil;
  // End of variables declaration//GEN-END:variables

  private void cargarFormulario(Class<?> aClass) {
    try {
      // Variable
      JInternalFrame view;
      // Buscar instancia
      view = buscarInstancia(aClass);
      // Crear instancia
      if (view == null) {
        view = (JInternalFrame) Class.forName(aClass.getName()).newInstance();
        desktopPane.add(view);
      }
      // Mostrar formulario
      view.setVisible(true);
      view.setSelected(true);
    } catch (Exception e) {
    }
  }

  private JInternalFrame buscarInstancia(Class<?> aClass) {
    JInternalFrame view = null;
    for (JInternalFrame form : desktopPane.getAllFrames()) {
      if (aClass.isInstance(form)) {
        view = form;
        break;
      }
    }
    return view;
  }
}
